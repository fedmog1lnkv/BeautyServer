name: Deploy to Server

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        run: |
          git clone https://github.com/${{ github.repository }} .

      - name: Set up Docker
        run: |
          docker build -t beauty-server:latest .

      - name: Save Docker image to file
        run: |
          docker save -o beauty-server.tar beauty-server:latest

      - name: Upload Docker image as artifact
        run: |
          mkdir -p $HOME/artifacts
          mv beauty-server.tar $HOME/artifacts/

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy Docker image to the server
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $HOME/artifacts/beauty-server.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/${{ secrets.SERVER_USER }}/beauty_server/

      - name: Run deployment commands on the server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ~/beauty_server
            sudo docker-compose stop api || true
            sudo docker-compose rm -f api || true
            sudo docker rmi beauty-server || true
            sudo docker system prune -f
            sudo docker load -i beauty_server/beauty-server.tar
            sudo docker-compose up -d api
          EOF
